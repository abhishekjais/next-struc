{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\React\\\\next-struc\\\\pages\\\\cart.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport { Grid, makeStyles } from \"@material-ui/core\";\nvar useStyles = makeStyles(function () {\n  return {\n    root: {\n      display: \"block\",\n      textTransform: 'uppercase'\n    },\n    card: {\n      maxWidth: 400,\n      margin: \"auto\",\n      // height: '120px',\n      transition: \"0.3s\",\n      // backgroundColor: \"#792141\",\n      boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\",\n      \"&:hover\": {\n        boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\"\n      }\n    },\n    content: {\n      textAlign: \"left\",\n      // padding: 20,\n      fontSize: '15px',\n      fontWeight: 600 // textTransform: 'uppercase'\n\n    },\n    rootContainer: {\n      display: \"inline-flex\",\n      width: \"100%\",\n      padding: \"17px 40px 17px 22px\",\n      marginBottom: 10,\n      height: 300\n    },\n    cardpadding: {\n      padding: '0 30px 0 0',\n      '&:last-child': {\n        padding: '0 30px 0 0'\n      }\n    },\n    media: {\n      height: 250,\n      width: 300,\n      // paddingTop: '56.25%', // 16:9,\n      backgroundSize: 'cover'\n    },\n    button: {\n      margin: '8px'\n    }\n  };\n});\n\nvar Cart = function Cart() {\n  _s();\n\n  console.log(sessionStorage.getItem('cart'), \"sessionStorage.getItem('cart')\");\n  var data = sessionStorage.getItem('cart') ? JSON.parse(sessionStorage.getItem('cart')) : [];\n  var classes = useStyles();\n  console.log(data, 'data');\n\n  var remove = function remove(id) {\n    // data.find((item: any) => {\n    //     console.log(item._id == id, item._id, id);\n    //     if (item._id === id)\n    //         return\n    // });\n    data.find(function (item) {\n      return item._id == id;\n    });\n    console.log(data, id);\n    sessionStorage.setItem('cart', JSON.stringify(data));\n  };\n\n  return __jsx(Layout, {\n    title: \"Cart\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, data.length && data.map(function (item, index) {\n    return __jsx(Grid, {\n      item: true,\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      className: classes.rootContainer,\n      key: 'cart' + index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    });\n  }), data.length == 0 ? __jsx(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    className: classes.rootContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, \" Cart is Empty.....\")) : '');\n};\n\n_s(Cart, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["D:/React/next-struc/pages/cart.tsx"],"names":["Layout","Grid","makeStyles","useStyles","root","display","textTransform","card","maxWidth","margin","transition","boxShadow","content","textAlign","fontSize","fontWeight","rootContainer","width","padding","marginBottom","height","cardpadding","media","backgroundSize","button","Cart","console","log","sessionStorage","getItem","data","JSON","parse","classes","remove","id","find","item","_id","setItem","stringify","length","map","index"],"mappings":"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","sourcesContent":["import Layout from \"../components/Layout\"\r\nimport { Grid, makeStyles, Divider, Typography, Button } from \"@material-ui/core\";\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        display: \"block\",\r\n        textTransform: 'uppercase'\r\n    },\r\n    card: {\r\n        maxWidth: 400,\r\n        margin: \"auto\",\r\n        // height: '120px',\r\n        transition: \"0.3s\",\r\n        // backgroundColor: \"#792141\",\r\n        boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\",\r\n        \"&:hover\": {\r\n            boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\"\r\n        }\r\n    },\r\n    content: {\r\n        textAlign: \"left\",\r\n        // padding: 20,\r\n        fontSize: '15px',\r\n        fontWeight: 600,\r\n        // textTransform: 'uppercase'\r\n    },\r\n    rootContainer: {\r\n        display: \"inline-flex\",\r\n        width: \"100%\",\r\n        padding: \"17px 40px 17px 22px\",\r\n        marginBottom: 10,\r\n        height: 300\r\n    },\r\n    cardpadding: {\r\n        padding: '0 30px 0 0',\r\n        '&:last-child': {\r\n            padding: '0 30px 0 0',\r\n        }\r\n    },\r\n    media: {\r\n        height: 250,\r\n        width: 300,\r\n        // paddingTop: '56.25%', // 16:9,\r\n        backgroundSize: 'cover'\r\n    },\r\n    button: {\r\n        margin: '8px',\r\n    },\r\n}));\r\nconst Cart = () => {\r\n    console.log(sessionStorage.getItem('cart'), \"sessionStorage.getItem('cart')\");\r\n\r\n    const data: any = sessionStorage.getItem('cart') ? JSON.parse(sessionStorage.getItem('cart')) : [];\r\n    const classes = useStyles();\r\n    console.log(data, 'data');\r\n\r\n    const remove = (id: string) => {\r\n        // data.find((item: any) => {\r\n        //     console.log(item._id == id, item._id, id);\r\n\r\n        //     if (item._id === id)\r\n        //         return\r\n        // });\r\n        data.find((item: any) => item._id == id);\r\n        console.log(data, id);\r\n\r\n        sessionStorage.setItem('cart', JSON.stringify(data));\r\n    }\r\n    return (\r\n        <Layout title='Cart'>\r\n            {data.length && data.map((item: any, index: number) => (\r\n                <Grid item container direction=\"row\" justify=\"space-between\" className={classes.rootContainer} key={'cart' + index}>\r\n                    {/* <Grid item xs={5} style={{ maxHeight: 300, textAlign: 'center' }}>\r\n                        <img src={item.image} alt=\"src\" height={'200px'} />\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <Divider orientation=\"vertical\" flexItem style={{ height: '100%', textAlign: 'center' }} />\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.content}>\r\n                        <Grid item>\r\n                            <Typography component='h1' style={{ textTransform: 'uppercase' }}>\r\n                                {item.category}\r\n                            </Typography>\r\n                            <Typography component='h1'>\r\n                                {item.title}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography component='h1'>\r\n                                ${item.price}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography component='h1'>\r\n                                {item.description}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                // startIcon={<ShoppingCartIcon />}\r\n                                onClick={() => remove(item._id)}\r\n                            > Remove</Button>\r\n\r\n                        </Grid>\r\n                    </Grid> */}\r\n                </Grid>\r\n            ))}\r\n            {data.length == 0 ?\r\n                <Grid item container direction=\"row\" justify=\"center\" className={classes.rootContainer}>\r\n                    <h1> Cart is Empty.....</h1>\r\n                </Grid> : ''}\r\n        </Layout>\r\n    )\r\n}\r\nexport default Cart;"]},"metadata":{},"sourceType":"module"}