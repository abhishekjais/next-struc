{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\next-struc\\\\pages\\\\cart.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport { Grid, makeStyles, Divider, Typography, Button } from \"@material-ui/core\";\nimport Link from \"next/link\";\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"block\",\n    textTransform: 'uppercase'\n  },\n  card: {\n    maxWidth: 400,\n    margin: \"auto\",\n    // height: '120px',\n    transition: \"0.3s\",\n    // backgroundColor: \"#792141\",\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\",\n    \"&:hover\": {\n      boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\"\n    }\n  },\n  content: {\n    textAlign: \"left\",\n    // padding: 20,\n    fontSize: '15px',\n    fontWeight: 600 // textTransform: 'uppercase'\n\n  },\n  rootContainer: {\n    display: \"inline-flex\",\n    width: \"100%\",\n    padding: \"17px 40px 17px 22px\",\n    marginBottom: 10,\n    height: 300\n  },\n  cardpadding: {\n    padding: '0 30px 0 0',\n    '&:last-child': {\n      padding: '0 30px 0 0'\n    }\n  },\n  media: {\n    height: 250,\n    width: 300,\n    // paddingTop: '56.25%', // 16:9,\n    backgroundSize: 'cover'\n  },\n  button: {\n    margin: '8px'\n  }\n}));\n\nconst Cart = () => {\n  const data = sessionStorage.getItem('cart') ? JSON.parse(sessionStorage.getItem('cart')) : [];\n  const classes = useStyles();\n  console.log(data, 'data');\n\n  const remove = id => {\n    // data.find((item: any) => {\n    //     console.log(item._id == id, item._id, id);\n    //     if (item._id === id)\n    //         return\n    // });\n    data.find(item => item._id == id);\n    console.log(data, id);\n    sessionStorage.setItem('cart', JSON.stringify(data));\n  };\n\n  const cartitem = item => {\n    const rows = [];\n\n    for (let i = 0; i < item.qty.length; i++) {\n      return __jsx(Grid, {\n        item: true,\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        className: classes.rootContainer,\n        key: 'cart' + index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 5,\n        style: {\n          maxHeight: 300,\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, __jsx(\"img\", {\n        src: item.image,\n        alt: \"src\",\n        height: '200px',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, __jsx(Divider, {\n        orientation: \"vertical\",\n        flexItem: true,\n        style: {\n          height: '100%',\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        className: classes.content,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, __jsx(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }, __jsx(Typography, {\n        component: \"h1\",\n        style: {\n          textTransform: 'uppercase'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }, item.category), __jsx(Typography, {\n        component: \"h1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }\n      }, item.title)), __jsx(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, __jsx(Typography, {\n        component: \"h1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      }, \"$\", item.price)), __jsx(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }, __jsx(Typography, {\n        component: \"h1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }\n      }, item.description)), __jsx(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }\n      }, __jsx(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button // startIcon={<ShoppingCartIcon />}\n        ,\n        onClick: () => remove(item._id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      }, \" Remove\"))));\n    }\n  };\n\n  return __jsx(Layout, {\n    title: \"Cart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, data.length > 0 && data.map((item, index) => __jsx(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    className: classes.rootContainer,\n    key: 'cart' + index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 5,\n    style: {\n      maxHeight: 300,\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: item.image,\n    alt: \"src\",\n    height: '200px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, __jsx(Divider, {\n    orientation: \"vertical\",\n    flexItem: true,\n    style: {\n      height: '100%',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    component: \"h1\",\n    style: {\n      textTransform: 'uppercase'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }, item.category), __jsx(Typography, {\n    component: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, item.title)), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    component: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, \"$\", item.price)), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    component: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, item.description)), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button // startIcon={<ShoppingCartIcon />}\n    ,\n    onClick: () => remove(item._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  }, \" Remove\"))))), data.length == 0 ? __jsx(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    alignContent: \"center\",\n    justify: \"center\",\n    className: classes.rootContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    style: {\n      fontSize: '25px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, \" Cart is Empty.....\")), __jsx(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    style: {\n      fontSize: '25px'\n    },\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, \" \", __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 82\n    }\n  }, \"Go for Shop\")))) : '');\n};\n\nexport default Cart;","map":{"version":3,"sources":["D:/React/next-struc/pages/cart.tsx"],"names":["Layout","Grid","makeStyles","Divider","Typography","Button","Link","useStyles","root","display","textTransform","card","maxWidth","margin","transition","boxShadow","content","textAlign","fontSize","fontWeight","rootContainer","width","padding","marginBottom","height","cardpadding","media","backgroundSize","button","Cart","data","sessionStorage","getItem","JSON","parse","classes","console","log","remove","id","find","item","_id","setItem","stringify","cartitem","rows","i","qty","length","index","maxHeight","image","category","title","price","description","map"],"mappings":"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","sourcesContent":["import Layout from \"../components/Layout\"\r\nimport { Grid, makeStyles, Divider, Typography, Button } from \"@material-ui/core\";\r\nimport Link from \"next/link\";\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        display: \"block\",\r\n        textTransform: 'uppercase'\r\n    },\r\n    card: {\r\n        maxWidth: 400,\r\n        margin: \"auto\",\r\n        // height: '120px',\r\n        transition: \"0.3s\",\r\n        // backgroundColor: \"#792141\",\r\n        boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\",\r\n        \"&:hover\": {\r\n            boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\"\r\n        }\r\n    },\r\n    content: {\r\n        textAlign: \"left\",\r\n        // padding: 20,\r\n        fontSize: '15px',\r\n        fontWeight: 600,\r\n        // textTransform: 'uppercase'\r\n    },\r\n    rootContainer: {\r\n        display: \"inline-flex\",\r\n        width: \"100%\",\r\n        padding: \"17px 40px 17px 22px\",\r\n        marginBottom: 10,\r\n        height: 300\r\n    },\r\n    cardpadding: {\r\n        padding: '0 30px 0 0',\r\n        '&:last-child': {\r\n            padding: '0 30px 0 0',\r\n        }\r\n    },\r\n    media: {\r\n        height: 250,\r\n        width: 300,\r\n        // paddingTop: '56.25%', // 16:9,\r\n        backgroundSize: 'cover'\r\n    },\r\n    button: {\r\n        margin: '8px',\r\n    },\r\n}));\r\nconst Cart = () => {\r\n\r\n    const data: any = sessionStorage.getItem('cart') ? JSON.parse(sessionStorage.getItem('cart')) : [];\r\n    const classes = useStyles();\r\n    console.log(data, 'data');\r\n\r\n    const remove = (id: string) => {\r\n        // data.find((item: any) => {\r\n        //     console.log(item._id == id, item._id, id);\r\n\r\n        //     if (item._id === id)\r\n        //         return\r\n        // });\r\n        data.find((item: any) => item._id == id);\r\n        console.log(data, id);\r\n\r\n        sessionStorage.setItem('cart', JSON.stringify(data));\r\n    }\r\n    const cartitem = (item: any) => {\r\n        const rows = [];\r\n        for (let i = 0; i < item.qty.length; i++) {\r\n            return (<Grid item container direction=\"row\" justify=\"space-between\" className={classes.rootContainer} key={'cart' + index}>\r\n                <Grid item xs={5} style={{ maxHeight: 300, textAlign: 'center' }}>\r\n                    <img src={item.image} alt=\"src\" height={'200px'} />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                    <Divider orientation=\"vertical\" flexItem style={{ height: '100%', textAlign: 'center' }} />\r\n                </Grid>\r\n                <Grid item xs={6} className={classes.content}>\r\n                    <Grid item>\r\n                        <Typography component='h1' style={{ textTransform: 'uppercase' }}>\r\n                            {item.category}\r\n                        </Typography>\r\n                        <Typography component='h1'>\r\n                            {item.title}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography component='h1'>\r\n                            ${item.price}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography component='h1'>\r\n                            {item.description}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            // startIcon={<ShoppingCartIcon />}\r\n                            onClick={() => remove(item._id)}\r\n                        > Remove</Button>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>)\r\n        }\r\n    }\r\n    return (\r\n        <Layout title='Cart'>\r\n            {data.length > 0 && data.map((item: any, index: number) => (\r\n                <Grid item container direction=\"row\" justify=\"space-between\" className={classes.rootContainer} key={'cart' + index}>\r\n                    <Grid item xs={5} style={{ maxHeight: 300, textAlign: 'center' }}>\r\n                        <img src={item.image} alt=\"src\" height={'200px'} />\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <Divider orientation=\"vertical\" flexItem style={{ height: '100%', textAlign: 'center' }} />\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.content}>\r\n                        <Grid item>\r\n                            <Typography component='h1' style={{ textTransform: 'uppercase' }}>\r\n                                {item.category}\r\n                            </Typography>\r\n                            <Typography component='h1'>\r\n                                {item.title}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography component='h1'>\r\n                                ${item.price}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography component='h1'>\r\n                                {item.description}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                // startIcon={<ShoppingCartIcon />}\r\n                                onClick={() => remove(item._id)}\r\n                            > Remove</Button>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            ))}\r\n            {data.length == 0 ?\r\n                <Grid item container direction=\"column\" alignContent='center' justify=\"center\" className={classes.rootContainer} >\r\n                    <Grid>\r\n                        <Typography style={{ fontSize: '25px' }}> Cart is Empty.....</Typography>\r\n                    </Grid>\r\n                    <Grid>\r\n                        <Typography style={{ fontSize: '25px' }} component='h2'> <Link href=\"/\">Go for Shop</Link></Typography>\r\n                    </Grid>\r\n                </Grid> : ''}\r\n        </Layout>\r\n    )\r\n}\r\nexport default Cart;"]},"metadata":{},"sourceType":"module"}