{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\React\\\\next-struc\\\\components\\\\CustomModal.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nexport default function CustomModal(props) {\n  _s();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      email = _React$useState4[0],\n      setemail = _React$useState4[1];\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n    props.handleClose(false);\n  };\n\n  useEffect(function () {\n    setOpen(props.open);\n  }, [props.open]);\n\n  var handleSubmit = function handleSubmit() {\n    console.log(email, /^[^ ]+@[^ ]+\\\\.[a-z]{2,6}$/.test(email));\n\n    if (email.match(/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2, 4}$/)) {\n      setOpen(false);\n      props.handleSubmit(email);\n    }\n  };\n\n  var handleChange = function handleChange(email) {\n    setemail(email);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Subscribe\"), __jsx(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, __jsx(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"To subscribe to this website, please enter your email address here.\"), __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Email Address\",\n    type: \"email\",\n    fullWidth: true,\n    onChange: function onChange(e) {\n      return handleChange(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  })), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    onClick: handleSubmit,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"Subscribe\"))));\n}\n\n_s(CustomModal, \"PrjLDT2sXCa09jbPCclQdt98sJc=\");\n\n_c = CustomModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomModal\");","map":{"version":3,"sources":["D:/React/next-struc/components/CustomModal.tsx"],"names":["React","useEffect","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","CustomModal","props","useState","open","setOpen","email","setemail","handleClose","handleSubmit","console","log","test","match","handleChange","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function CustomModal(props: any) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [email, setemail] = React.useState('');\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        props.handleClose(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setOpen(props.open)\r\n    }, [props.open])\r\n\r\n    const handleSubmit = () => {\r\n        console.log(email, /^[^ ]+@[^ ]+\\\\.[a-z]{2,6}$/.test(email));\r\n\r\n        if (email.match(/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2, 4}$/)) {\r\n            setOpen(false);\r\n            props.handleSubmit(email);\r\n        }\r\n    }\r\n    const handleChange = (email: string) => {\r\n        setemail(email);\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        To subscribe to this website, please enter your email address here.\r\n          </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Email Address\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                        onChange={(e) => handleChange(e.target.value)}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button onClick={handleSubmit} color=\"primary\">\r\n                        Subscribe\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}