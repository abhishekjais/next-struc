{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\next-struc\\\\pages\\\\products\\\\detail\\\\[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Grid, makeStyles, Divider, Typography, Button } from \"@material-ui/core\";\nimport Layout from \"../../../components/Layout\";\nimport middleware from \"../../../middlewares/middleware\";\nimport Product from \"../../../module/Product/product\";\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport OfflineBoltIcon from '@material-ui/icons/OfflineBolt';\nimport CustomModal from \"../../../components/CustomModal\";\nimport { useState } from \"react\";\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"block\",\n    textTransform: 'uppercase'\n  },\n  card: {\n    maxWidth: 400,\n    margin: \"auto\",\n    // height: '120px',\n    transition: \"0.3s\",\n    // backgroundColor: \"#792141\",\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\",\n    \"&:hover\": {\n      boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\"\n    }\n  },\n  content: {\n    textAlign: \"left\",\n    // padding: 20,\n    fontSize: '15px',\n    fontWeight: 600 // textTransform: 'uppercase'\n\n  },\n  rootContainer: {\n    display: \"inline-flex\",\n    width: \"100%\",\n    padding: \"17px 40px 17px 22px\",\n    marginBottom: 10,\n    height: 400\n  },\n  cardpadding: {\n    padding: '0 30px 0 0',\n    '&:last-child': {\n      padding: '0 30px 0 0'\n    }\n  },\n  media: {\n    height: 250,\n    width: 300,\n    // paddingTop: '56.25%', // 16:9,\n    backgroundSize: 'cover'\n  },\n  button: {\n    margin: '8px'\n  }\n}));\n\nconst Detail = data => {\n  const classes = useStyles();\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  let user = sessionStorage.getItem('email');\n  const cart = JSON.parse(sessionStorage.getItem('cart'));\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const openModal = val => {\n    if (!user) setOpen(val);else handleSubmit(user);\n  };\n\n  const handleSubmit = email => {\n    if (user) {\n      if (cart.length) {\n        if (cart.find(item => item._id === data._id)) {\n          cart.forEach((element, i) => {\n            if (element._id === data._id) {\n              cart[i]['qty'] = Number(element.qty) + 1;\n            }\n          });\n          console.log(cart);\n          sessionStorage.setItem('cart', JSON.stringify(cart));\n        } else {\n          let cart = [JSON.parse(JSON.stringify(data))];\n          cart[0]['qty'] = 1;\n          console.log(cart);\n          sessionStorage.setItem('cart', JSON.stringify(cart));\n        }\n      }\n    } else {\n      setOpen(false);\n      sessionStorage.setItem('email', email);\n      let cart = JSON.parse(JSON.stringify([data]));\n      cart[0]['qty'] = 1;\n      sessionStorage.setItem('cart', JSON.stringify(cart));\n    }\n  };\n\n  return __jsx(Layout, {\n    title: \"Detail\",\n    center: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    className: classes.rootContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: data.image,\n    alt: \"src\",\n    style: {\n      maxHeight: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, __jsx(Divider, {\n    orientation: \"vertical\",\n    flexItem: true,\n    style: {\n      height: '100%',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    component: \"h1\",\n    style: {\n      textTransform: 'uppercase'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, data.category), __jsx(Typography, {\n    component: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, data.title)), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    component: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, \"$\", data.price)), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    component: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, data.description)), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    startIcon: __jsx(ShoppingCartIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 40\n      }\n    }),\n    onClick: () => openModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, \" Add to Cart\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    className: classes.button,\n    startIcon: __jsx(OfflineBoltIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 40\n      }\n    }),\n    onClick: () => openModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }, \"Buy Now\")))), open ? __jsx(CustomModal, {\n    open: open,\n    handleSubmit: handleSubmit,\n    handleClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }) : '');\n};\n\nexport default Detail;\nexport const getServerSideProps = async ctx => {\n  var _ctx$query;\n\n  const req = ctx === null || ctx === void 0 ? void 0 : ctx.req;\n  const res = ctx === null || ctx === void 0 ? void 0 : ctx.res;\n  await middleware.apply(req, res);\n  const value = ctx === null || ctx === void 0 ? void 0 : (_ctx$query = ctx.query) === null || _ctx$query === void 0 ? void 0 : _ctx$query.id;\n  console.log(ctx.query);\n  const query = value ? {\n    _id: value\n  } : {};\n  const product = await Product.findOne(query); // Pass data to the page via props\n\n  return {\n    props: JSON.parse(JSON.stringify(product))\n  };\n};","map":{"version":3,"sources":["D:/React/next-struc/pages/products/detail/[id].tsx"],"names":["Grid","makeStyles","Divider","Typography","Button","Layout","middleware","Product","ShoppingCartIcon","OfflineBoltIcon","CustomModal","useState","useStyles","root","display","textTransform","card","maxWidth","margin","transition","boxShadow","content","textAlign","fontSize","fontWeight","rootContainer","width","padding","marginBottom","height","cardpadding","media","backgroundSize","button","Detail","data","classes","open","setOpen","user","sessionStorage","getItem","cart","JSON","parse","handleClose","openModal","val","handleSubmit","email","length","find","item","_id","forEach","element","i","Number","qty","console","log","setItem","stringify","image","maxHeight","category","title","price","description","getServerSideProps","ctx","req","res","apply","value","query","id","product","findOne","props"],"mappings":"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","sourcesContent":["import { Grid, makeStyles, Divider, Typography, Button } from \"@material-ui/core\";\r\nimport Layout from \"../../../components/Layout\";\r\nimport { GetServerSideProps, NextApiRequest, NextApiResponse } from \"next\";\r\nimport middleware from \"../../../middlewares/middleware\";\r\nimport Product from \"../../../module/Product/product\";\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport OfflineBoltIcon from '@material-ui/icons/OfflineBolt';\r\nimport CustomModal from \"../../../components/CustomModal\";\r\nimport { useState } from \"react\";\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        display: \"block\",\r\n        textTransform: 'uppercase'\r\n    },\r\n    card: {\r\n        maxWidth: 400,\r\n        margin: \"auto\",\r\n        // height: '120px',\r\n        transition: \"0.3s\",\r\n        // backgroundColor: \"#792141\",\r\n        boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\",\r\n        \"&:hover\": {\r\n            boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\"\r\n        }\r\n    },\r\n    content: {\r\n        textAlign: \"left\",\r\n        // padding: 20,\r\n        fontSize: '15px',\r\n        fontWeight: 600,\r\n        // textTransform: 'uppercase'\r\n    },\r\n    rootContainer: {\r\n        display: \"inline-flex\",\r\n        width: \"100%\",\r\n        padding: \"17px 40px 17px 22px\",\r\n        marginBottom: 10,\r\n        height: 400\r\n    },\r\n    cardpadding: {\r\n        padding: '0 30px 0 0',\r\n        '&:last-child': {\r\n            padding: '0 30px 0 0',\r\n        }\r\n    },\r\n    media: {\r\n        height: 250,\r\n        width: 300,\r\n        // paddingTop: '56.25%', // 16:9,\r\n        backgroundSize: 'cover'\r\n    },\r\n    button: {\r\n        margin: '8px',\r\n    },\r\n}));\r\nconst Detail = (data: any) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    let user = sessionStorage.getItem('email');\r\n    const cart: any = JSON.parse(sessionStorage.getItem('cart'));\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const openModal = (val: boolean) => {\r\n        if (!user)\r\n            setOpen(val);\r\n        else\r\n            handleSubmit(user);\r\n    }\r\n    const handleSubmit = (email: any) => {\r\n        if (user) {\r\n            if (cart.length) {\r\n                if (cart.find(item => item._id === data._id)) {\r\n                    cart.forEach((element, i) => {\r\n                        if (element._id === data._id) {\r\n                            cart[i]['qty'] = Number(element.qty) + 1;\r\n                        }\r\n                    });\r\n                    console.log(cart);\r\n                    sessionStorage.setItem('cart', JSON.stringify(cart));\r\n                } else {\r\n                    let cart: any = [JSON.parse(JSON.stringify(data))];\r\n                    cart[0]['qty'] = 1;\r\n                    console.log(cart);\r\n                    sessionStorage.setItem('cart', JSON.stringify(cart));\r\n                }\r\n\r\n            }\r\n        } else {\r\n            setOpen(false);\r\n            sessionStorage.setItem('email', email);\r\n            let cart: any = JSON.parse(JSON.stringify([data]));\r\n            cart[0]['qty'] = 1;\r\n            sessionStorage.setItem('cart', JSON.stringify(cart));\r\n        }\r\n    }\r\n    return (\r\n        <Layout title=\"Detail\" center={true}>\r\n            <Grid item container direction=\"row\" justify=\"space-between\" className={classes.rootContainer}>\r\n                <Grid item xs={5} >\r\n                    <img src={data.image} alt=\"src\" style={{ maxHeight: 400 }} />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                    <Divider orientation=\"vertical\" flexItem style={{ height: '100%', textAlign: 'center' }} />\r\n                </Grid>\r\n                <Grid item xs={6} className={classes.content}>\r\n                    <Grid item>\r\n                        <Typography component='h1' style={{ textTransform: 'uppercase' }}>\r\n                            {data.category}\r\n                        </Typography>\r\n                        <Typography component='h1'>\r\n                            {data.title}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography component='h1'>\r\n                            ${data.price}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography component='h1'>\r\n                            {data.description}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            startIcon={<ShoppingCartIcon />}\r\n                            onClick={() => openModal(true)}\r\n                        > Add to Cart</Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            startIcon={<OfflineBoltIcon />}\r\n                            onClick={() => openModal(true)}\r\n                        >Buy Now</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            {\r\n                open ?\r\n                    <CustomModal\r\n                        open={open}\r\n                        handleSubmit={handleSubmit}\r\n                        handleClose={handleClose}\r\n                    />\r\n                    : ''\r\n            }\r\n\r\n        </Layout>\r\n    )\r\n}\r\nexport default Detail;\r\n\r\nexport const getServerSideProps: GetServerSideProps = async (ctx) => {\r\n    const req = ctx?.req as NextApiRequest;\r\n    const res = ctx?.res as NextApiResponse;\r\n    await middleware.apply(req, res);\r\n    const value = ctx?.query?.id;\r\n    console.log(ctx.query);\r\n\r\n    const query = value ? { _id: value } : {};\r\n    const product = await Product.findOne(query);\r\n    // Pass data to the page via props\r\n    return { props: JSON.parse(JSON.stringify(product)) }\r\n}"]},"metadata":{},"sourceType":"module"}