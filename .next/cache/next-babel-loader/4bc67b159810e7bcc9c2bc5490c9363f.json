{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\React\\\\next-struc\\\\components\\\\CustomModal.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nexport default function CustomModal(props) {\n  _s();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      email = _React$useState4[0],\n      setemail = _React$useState4[1];\n\n  var _React$useState5 = React.useState({}),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      user = _React$useState6[0],\n      setUser = _React$useState6[1];\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n    props.handleClose(false);\n  };\n\n  useEffect(function () {\n    setOpen(props.open);\n  }, [props.open]);\n\n  var handleSubmit = function handleSubmit() {\n    // if (email.match(/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2, 4}$/)) {\n    setOpen(false);\n    props.handleSubmit(user); // }\n  };\n\n  var handleChange = function handleChange(value, label) {\n    var userData = _objectSpread({}, user);\n\n    userData[label] = value;\n    setUser(userData);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, __jsx(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Subscribe\"), __jsx(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, __jsx(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"To subscribe to this website, please enter your email address here.\"), __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Name\",\n    type: \"text\",\n    fullWidth: true,\n    onChange: function onChange(e) {\n      return handleChange(e.target.value, 'name');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }), __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"email\",\n    label: \"Email Address\",\n    type: \"email\",\n    fullWidth: true,\n    onChange: function onChange(e) {\n      return handleChange(e.target.value, 'email');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }), __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"address\",\n    label: \"Address\",\n    type: \"text\",\n    fullWidth: true,\n    onChange: function onChange(e) {\n      return handleChange(e.target.value, 'address');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"coupon\",\n    label: \"Counpon\",\n    type: \"text\",\n    fullWidth: true,\n    onChange: function onChange(e) {\n      return handleChange(e.target.value, 'coupon');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  })), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    onClick: handleSubmit,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Subscribe\"))));\n}\n\n_s(CustomModal, \"xvlqh2/9qo3yOqlVxr8VLmk2HbM=\");\n\n_c = CustomModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomModal\");","map":{"version":3,"sources":["D:/React/next-struc/components/CustomModal.tsx"],"names":["React","useEffect","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","CustomModal","props","useState","open","setOpen","email","setemail","user","setUser","handleClose","handleSubmit","handleChange","value","label","userData","e","target"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport interface IValues {\r\n    name: string;\r\n    email: string;\r\n    address: string;\r\n    coupon: string;\r\n}\r\nexport default function CustomModal(props: any) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [email, setemail] = React.useState('');\r\n    const [user, setUser] = React.useState({} as IValues);\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        props.handleClose(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setOpen(props.open)\r\n    }, [props.open])\r\n\r\n    const handleSubmit = () => {\r\n        // if (email.match(/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2, 4}$/)) {\r\n        setOpen(false);\r\n        props.handleSubmit(user);\r\n        // }\r\n    }\r\n    const handleChange = (value: string, label: string) => {\r\n        const userData: any = { ...user };\r\n        userData[label] = value;\r\n        setUser(userData);\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        To subscribe to this website, please enter your email address here.\r\n          </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Name\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        onChange={(e) => handleChange(e.target.value, 'name')}\r\n                    />\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                        onChange={(e) => handleChange(e.target.value, 'email')}\r\n                    />\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"address\"\r\n                        label=\"Address\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        onChange={(e) => handleChange(e.target.value, 'address')}\r\n                    />\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"coupon\"\r\n                        label=\"Counpon\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        onChange={(e) => handleChange(e.target.value, 'coupon')}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button onClick={handleSubmit} color=\"primary\">\r\n                        Subscribe\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}