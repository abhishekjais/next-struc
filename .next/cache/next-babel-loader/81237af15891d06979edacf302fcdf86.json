{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\next-struc\\\\pages\\\\products\\\\[catType]\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../../../components/Layout\";\nimport { Grid, Card, CardActionArea, CardMedia, CardContent, Typography, makeStyles } from \"@material-ui/core\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"block\",\n      textTransform: 'uppercase'\n    },\n    card: {\n      maxWidth: 400,\n      margin: \"auto\",\n      // height: '120px',\n      transition: \"0.3s\",\n      // backgroundColor: \"#792141\",\n      boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\",\n      \"&:hover\": {\n        boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\"\n      }\n    },\n    content: {\n      textAlign: \"center\",\n      padding: 10,\n      fontSize: '20px',\n      fontWeight: 600\n    },\n    rootContainer: {\n      display: \"flex\",\n      width: \"100%\",\n      padding: \"10px 0px 17px 0px\",\n      marginBottom: 10\n    },\n    cardpadding: {\n      padding: '0 30px 0 0',\n      '&:last-child': {\n        padding: '0 30px 0 0'\n      }\n    },\n    media: {\n      height: 140,\n      paddingTop: '56.25%' // 16:9\n\n    }\n  };\n});\nexport var __N_SSP = true;\nexport default function CategoryType(props) {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n  var data = props.data;\n  return __jsx(Layout, {\n    title: \"Product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, data.length && data.map(function (item, index) {\n    return (// (index % 3 === 0 &&\n      //     <Grid item container direction=\"row\" justify=\"space-between\" className={classes.rootContainer}>)\n      __jsx(Grid, {\n        item: true,\n        xs: true,\n        className: classes.root,\n        key: 'cat' + index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, __jsx(Card, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, __jsx(CardActionArea, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, __jsx(CardMedia, {\n        className: classes.media,\n        image: item.image,\n        title: \"Contemplative Reptile\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }\n      }), __jsx(CardContent, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }\n      }, __jsx(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"h2\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }\n      }, item.title), __jsx(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 33\n        }\n      }, \"$\", item.price))))) // </Grid>\n\n    );\n  }));\n}\n\n_s(CategoryType, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CategoryType;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryType\");","map":{"version":3,"sources":["D:/React/next-struc/pages/products/[catType]/index.tsx"],"names":["Layout","Grid","Card","CardActionArea","CardMedia","CardContent","Typography","makeStyles","useStyles","theme","root","display","textTransform","card","maxWidth","margin","transition","boxShadow","content","textAlign","padding","fontSize","fontWeight","rootContainer","width","marginBottom","cardpadding","media","height","paddingTop","CategoryType","props","classes","data","length","map","item","index","image","title","price"],"mappings":"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","sourcesContent":["import { NextPageContext, NextApiRequest, NextApiResponse, GetServerSideProps } from \"next\"\r\nimport middleware from \"../../../middlewares/middleware\";\r\nimport Product from \"../../../module/Product/product\";\r\nimport Layout from \"../../../components/Layout\";\r\nimport { Grid, Card, CardActionArea, CardMedia, CardContent, Typography, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n    root: {\r\n        display: \"block\",\r\n        textTransform: 'uppercase'\r\n    },\r\n    card: {\r\n        maxWidth: 400,\r\n        margin: \"auto\",\r\n        // height: '120px',\r\n        transition: \"0.3s\",\r\n        // backgroundColor: \"#792141\",\r\n        boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\",\r\n        \"&:hover\": {\r\n            boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\"\r\n        }\r\n    },\r\n    content: {\r\n        textAlign: \"center\",\r\n        padding: 10,\r\n        fontSize: '20px',\r\n        fontWeight: 600\r\n    },\r\n    rootContainer: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        padding: \"10px 0px 17px 0px\",\r\n        marginBottom: 10\r\n    },\r\n    cardpadding: {\r\n        padding: '0 30px 0 0',\r\n        '&:last-child': {\r\n            padding: '0 30px 0 0',\r\n        }\r\n    },\r\n    media: {\r\n        height: 140,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n}));\r\nexport default function CategoryType(props: any) {\r\n    const classes = useStyles();\r\n    const { data } = props;\r\n    return (\r\n        <Layout title=\"Product\">\r\n            {data.length && data.map((item: any, index: number) => (\r\n                // (index % 3 === 0 &&\r\n                //     <Grid item container direction=\"row\" justify=\"space-between\" className={classes.rootContainer}>)\r\n\r\n                <Grid item xs className={classes.root} key={'cat' + index}>\r\n                    <Card >\r\n                        <CardActionArea>\r\n                            <CardMedia\r\n                                className={classes.media}\r\n                                image={item.image}\r\n                                title=\"Contemplative Reptile\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    {item.title}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    ${item.price}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                // </Grid>\r\n            ))}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport const getServerSideProps: GetServerSideProps = async (ctx) => {\r\n    const req = ctx?.req as NextApiRequest;\r\n    const res = ctx?.res as NextApiResponse;\r\n    await middleware.apply(req, res);\r\n    const value = ctx?.query?.catType;\r\n    const query = value ? { category: value } : {};\r\n    const product = await Product.find(query);\r\n    // Pass data to the page via props\r\n    return { props: { data: JSON.parse(JSON.stringify(product)) } }\r\n}"]},"metadata":{},"sourceType":"module"}