{"ast":null,"code":"import mongoose from \"mongoose\";\nconst connection = {\n  isConnected: false || 0\n};\n\nconst dbConnect = async () => {\n  if (connection.isConnected) {\n    return true;\n  }\n\n  console.log(process.env, 'process.env');\n  const db = await mongoose.connect(process.env.MONGO_URI, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  });\n  connection.isConnected = db.connections[0].readyState;\n  console.log(connection.isConnected);\n};\n\nexport default dbConnect;","map":{"version":3,"sources":["/var/local/react/next-struc/utils/dbConnect.tsx"],"names":["mongoose","connection","isConnected","dbConnect","console","log","process","env","db","connect","MONGO_URI","useNewUrlParser","useUnifiedTopology","connections","readyState"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,MAAMC,UAAU,GAAG;AACfC,EAAAA,WAAW,EAAE,SAAS;AADP,CAAnB;;AAIA,MAAMC,SAAS,GAAG,YAAY;AAC1B,MAAIF,UAAU,CAACC,WAAf,EAA4B;AACxB,WAAO,IAAP;AACH;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAApB,EAAyB,aAAzB;AAEA,QAAMC,EAAE,GAAG,MAAMR,QAAQ,CAACS,OAAT,CAAiBH,OAAO,CAACC,GAAR,CAAYG,SAA7B,EAAwC;AACrDC,IAAAA,eAAe,EAAE,IADoC;AAErDC,IAAAA,kBAAkB,EAAE;AAFiC,GAAxC,CAAjB;AAIAX,EAAAA,UAAU,CAACC,WAAX,GAAyBM,EAAE,CAACK,WAAH,CAAe,CAAf,EAAkBC,UAA3C;AACAV,EAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAU,CAACC,WAAvB;AAEH,CAbD;;AAeA,eAAeC,SAAf","sourcesContent":["import mongoose from \"mongoose\";\n\nconst connection = {\n    isConnected: false || 0\n}\n\nconst dbConnect = async () => {\n    if (connection.isConnected) {\n        return true;\n    }\n    console.log(process.env, 'process.env');\n\n    const db = await mongoose.connect(process.env.MONGO_URI, {\n        useNewUrlParser: true,\n        useUnifiedTopology: true\n    });\n    connection.isConnected = db.connections[0].readyState;\n    console.log(connection.isConnected);\n\n}\n\nexport default dbConnect;"]},"metadata":{},"sourceType":"module"}