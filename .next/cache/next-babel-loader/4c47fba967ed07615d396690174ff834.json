{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\React\\\\next-struc\\\\pages\\\\cart.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport { Grid, makeStyles, Divider, Typography, Button } from \"@material-ui/core\";\nimport Link from \"next/link\";\nimport ExposureNeg1Icon from '@material-ui/icons/ExposureNeg1';\nimport PlusOneIcon from '@material-ui/icons/PlusOne';\nimport { useState } from \"react\";\nvar useStyles = makeStyles(function () {\n  return {\n    root: {\n      display: \"block\",\n      textTransform: 'uppercase'\n    },\n    card: {\n      maxWidth: 400,\n      margin: \"auto\",\n      // height: '120px',\n      transition: \"0.3s\",\n      // backgroundColor: \"#792141\",\n      boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\",\n      \"&:hover\": {\n        boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\"\n      }\n    },\n    content: {\n      textAlign: \"left\",\n      // padding: 20,\n      fontSize: '15px',\n      fontWeight: 600 // textTransform: 'uppercase'\n\n    },\n    rootContainer: {\n      display: \"inline-flex\",\n      width: \"100%\",\n      padding: \"17px 40px 17px 22px\",\n      marginBottom: 10,\n      height: 300\n    },\n    cardpadding: {\n      padding: '0 30px 0 0',\n      '&:last-child': {\n        padding: '0 30px 0 0'\n      }\n    },\n    media: {\n      height: 250,\n      width: 300,\n      // paddingTop: '56.25%', // 16:9,\n      backgroundSize: 'cover'\n    },\n    button: {\n      margin: '8px'\n    }\n  };\n});\n\nvar Cart = function Cart() {\n  _s();\n\n  var data = sessionStorage.getItem('cart') ? JSON.parse(sessionStorage.getItem('cart')) : [];\n\n  var _useState = useState(data),\n      cart = _useState[0],\n      setCart = _useState[1];\n\n  var classes = useStyles();\n  console.log(data, 'data');\n\n  var remove = function remove(id) {\n    data.find(function (item) {\n      return item._id == id;\n    });\n    sessionStorage.setItem('cart', JSON.stringify(data));\n  };\n\n  var add = function add(id) {\n    data.forEach(function (element, i) {\n      if (element._id == id) {\n        data[i]['qty'] = Number(data[i]['qty']) + 1;\n      }\n    });\n    console.log(data, 'in card');\n    setCart(data);\n    sessionStorage.setItem('cart', JSON.stringify(cart));\n  }; // useEffect(() => {\n  // }, [data])\n\n\n  return __jsx(Layout, {\n    title: \"Cart\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, cart.length > 0 && cart.map(function (item, index) {\n    return __jsx(Grid, {\n      item: true,\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      className: classes.rootContainer,\n      key: 'cart' + index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 5,\n      style: {\n        maxHeight: 300,\n        textAlign: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, __jsx(\"img\", {\n      src: item.image,\n      alt: \"src\",\n      height: '200px',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    })), __jsx(Grid, {\n      item: true,\n      xs: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, __jsx(Divider, {\n      orientation: \"vertical\",\n      flexItem: true,\n      style: {\n        height: '100%',\n        textAlign: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    })), __jsx(Grid, {\n      item: true,\n      xs: 6,\n      className: classes.content,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, __jsx(Grid, {\n      item: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, __jsx(Typography, {\n      component: \"h1\",\n      style: {\n        textTransform: 'uppercase'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }\n    }, item.category), __jsx(Typography, {\n      component: \"h1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, item.title)), __jsx(Grid, {\n      item: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, __jsx(Typography, {\n      component: \"h1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }, \"$\", item.price)), __jsx(Grid, {\n      item: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, __jsx(Typography, {\n      component: \"h1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    }, item.description)), __jsx(Grid, {\n      item: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, __jsx(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      startIcon: __jsx(ExposureNeg1Icon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 44\n        }\n      }),\n      onClick: function onClick() {\n        return remove(item._id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }, \" \"), item.qty, __jsx(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      startIcon: __jsx(PlusOneIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 44\n        }\n      }),\n      onClick: function onClick() {\n        return add(item._id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 29\n      }\n    }, \" \"))));\n  }), cart.length == 0 ? __jsx(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    alignContent: \"center\",\n    justify: \"center\",\n    className: classes.rootContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    style: {\n      fontSize: '25px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }, \" Cart is Empty.....\")), __jsx(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    style: {\n      fontSize: '25px'\n    },\n    component: \"h2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }, \" \", __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 82\n    }\n  }, \"Go for Shop\")))) : '');\n};\n\n_s(Cart, \"gN1uKvwoRzRX3PVEyCsr7wHj024=\", false, function () {\n  return [useStyles];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["D:/React/next-struc/pages/cart.tsx"],"names":["Layout","Grid","makeStyles","Divider","Typography","Button","Link","ExposureNeg1Icon","PlusOneIcon","useState","useStyles","root","display","textTransform","card","maxWidth","margin","transition","boxShadow","content","textAlign","fontSize","fontWeight","rootContainer","width","padding","marginBottom","height","cardpadding","media","backgroundSize","button","Cart","data","sessionStorage","getItem","JSON","parse","cart","setCart","classes","console","log","remove","id","find","item","_id","setItem","stringify","add","forEach","element","i","Number","length","map","index","maxHeight","image","category","title","price","description","qty"],"mappings":"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","sourcesContent":["import Layout from \"../components/Layout\"\r\nimport { Grid, makeStyles, Divider, Typography, Button } from \"@material-ui/core\";\r\nimport Link from \"next/link\";\r\nimport ExposureNeg1Icon from '@material-ui/icons/ExposureNeg1';\r\nimport PlusOneIcon from '@material-ui/icons/PlusOne';\r\nimport { useState, useEffect } from \"react\";\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        display: \"block\",\r\n        textTransform: 'uppercase'\r\n    },\r\n    card: {\r\n        maxWidth: 400,\r\n        margin: \"auto\",\r\n        // height: '120px',\r\n        transition: \"0.3s\",\r\n        // backgroundColor: \"#792141\",\r\n        boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\",\r\n        \"&:hover\": {\r\n            boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\"\r\n        }\r\n    },\r\n    content: {\r\n        textAlign: \"left\",\r\n        // padding: 20,\r\n        fontSize: '15px',\r\n        fontWeight: 600,\r\n        // textTransform: 'uppercase'\r\n    },\r\n    rootContainer: {\r\n        display: \"inline-flex\",\r\n        width: \"100%\",\r\n        padding: \"17px 40px 17px 22px\",\r\n        marginBottom: 10,\r\n        height: 300\r\n    },\r\n    cardpadding: {\r\n        padding: '0 30px 0 0',\r\n        '&:last-child': {\r\n            padding: '0 30px 0 0',\r\n        }\r\n    },\r\n    media: {\r\n        height: 250,\r\n        width: 300,\r\n        // paddingTop: '56.25%', // 16:9,\r\n        backgroundSize: 'cover'\r\n    },\r\n    button: {\r\n        margin: '8px',\r\n    },\r\n}));\r\nconst Cart = () => {\r\n\r\n    const data: any = sessionStorage.getItem('cart') ? JSON.parse(sessionStorage.getItem('cart')) : [];\r\n    const [cart, setCart] = useState(data);\r\n    const classes = useStyles();\r\n    console.log(data, 'data');\r\n\r\n    const remove = (id: string) => {\r\n        data.find((item: any) => item._id == id);\r\n        sessionStorage.setItem('cart', JSON.stringify(data));\r\n    }\r\n    const add = (id: string) => {\r\n        data.forEach((element, i) => {\r\n            if (element._id == id) {\r\n                data[i]['qty'] = Number(data[i]['qty']) + 1;\r\n            }\r\n        });\r\n        console.log(data, 'in card');\r\n\r\n        setCart(data);\r\n        sessionStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n    // useEffect(() => {\r\n\r\n\r\n    // }, [data])\r\n\r\n    return (\r\n        <Layout title='Cart'>\r\n            {cart.length > 0 && cart.map((item: any, index: number) => (\r\n                <Grid item container direction=\"row\" justify=\"space-between\" className={classes.rootContainer} key={'cart' + index}>\r\n                    <Grid item xs={5} style={{ maxHeight: 300, textAlign: 'center' }}>\r\n                        <img src={item.image} alt=\"src\" height={'200px'} />\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <Divider orientation=\"vertical\" flexItem style={{ height: '100%', textAlign: 'center' }} />\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.content}>\r\n                        <Grid item>\r\n                            <Typography component='h1' style={{ textTransform: 'uppercase' }}>\r\n                                {item.category}\r\n                            </Typography>\r\n                            <Typography component='h1'>\r\n                                {item.title}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography component='h1'>\r\n                                ${item.price}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography component='h1'>\r\n                                {item.description}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<ExposureNeg1Icon />}\r\n                                onClick={() => remove(item._id)}\r\n                            > </Button>\r\n                            {item.qty}\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<PlusOneIcon />}\r\n                                onClick={() => add(item._id)}\r\n                            > </Button>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            ))}\r\n            {cart.length == 0 ?\r\n                <Grid item container direction=\"column\" alignContent='center' justify=\"center\" className={classes.rootContainer} >\r\n                    <Grid>\r\n                        <Typography style={{ fontSize: '25px' }}> Cart is Empty.....</Typography>\r\n                    </Grid>\r\n                    <Grid>\r\n                        <Typography style={{ fontSize: '25px' }} component='h2'> <Link href=\"/\">Go for Shop</Link></Typography>\r\n                    </Grid>\r\n                </Grid> : ''}\r\n        </Layout>\r\n    )\r\n}\r\nexport default Cart;"]},"metadata":{},"sourceType":"module"}