{"ast":null,"code":"import axios from 'axios';\nimport { PRO_LIST } from './ActionsTypes';\n// const getProduct = (query: any, type: any) => {\n//     return (dispatch: any) => {\n//         axios.get(`https://fakestoreapi.com/products`)\n//             .then((response) => {\n//                 dispatch({ type: PRO_LIST, payload: response.data });\n//             })\n//             .catch((error) => {\n//                 console.log(error, 'error.response');\n//                 switch (error.response.status) {\n//                     case 401:\n//                         Router.push('/');\n//                         break;\n//                     case 422:\n//                         alert(error.response.data.meta.message);\n//                         break;\n//                     case 500:\n//                         alert('Interval server error! Try again!');\n//                     case 503:\n//                         alert(error.response.data.meta.message);\n//                         Router.push('/');\n//                         break;\n//                     default:\n//                         alert(error.response.data.meta.message);\n//                         break;\n//                 }\n//             });\n//     };\n// };\nexport const getProduct = id => {\n  return async dispatch => {\n    const res = await axios.get(`https://fakestoreapi.com/products`);\n    dispatch({\n      type: PRO_LIST,\n      payload: res.data\n    }); // return { products: res.data }\n  };\n};\nexport default {\n  getProduct\n};","map":{"version":3,"sources":["D:/React/next-struc/store/actions/product.tsx"],"names":["axios","PRO_LIST","getProduct","id","dispatch","res","get","type","payload","data"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMC,UAAU,GAAIC,EAAD,IAAQ;AAC9B,SAAO,MAAOC,QAAP,IAAyB;AAC5B,UAAMC,GAAG,GAAG,MAAML,KAAK,CAACM,GAAN,CAAW,mCAAX,CAAlB;AACAF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEN,QAAR;AAAkBO,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAA/B,KAAD,CAAR,CAF4B,CAG5B;AACH,GAJD;AAKH,CANM;AAQP,eAAe;AACXP,EAAAA;AADW,CAAf","sourcesContent":["import Router from 'next/router';\r\nimport axios from 'axios';\r\nimport { PRO_LIST } from './ActionsTypes';\r\nimport { API } from '../../config';\r\n\r\n\r\n// const getProduct = (query: any, type: any) => {\r\n//     return (dispatch: any) => {\r\n//         axios.get(`https://fakestoreapi.com/products`)\r\n//             .then((response) => {\r\n//                 dispatch({ type: PRO_LIST, payload: response.data });\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.log(error, 'error.response');\r\n//                 switch (error.response.status) {\r\n//                     case 401:\r\n//                         Router.push('/');\r\n//                         break;\r\n//                     case 422:\r\n//                         alert(error.response.data.meta.message);\r\n//                         break;\r\n//                     case 500:\r\n//                         alert('Interval server error! Try again!');\r\n//                     case 503:\r\n//                         alert(error.response.data.meta.message);\r\n//                         Router.push('/');\r\n//                         break;\r\n//                     default:\r\n//                         alert(error.response.data.meta.message);\r\n//                         break;\r\n//                 }\r\n//             });\r\n//     };\r\n// };\r\n\r\nexport const getProduct = (id) => {\r\n    return async (dispatch: any) => {\r\n        const res = await axios.get(`https://fakestoreapi.com/products`);\r\n        dispatch({ type: PRO_LIST, payload: res.data });\r\n        // return { products: res.data }\r\n    }\r\n}\r\n\r\nexport default {\r\n    getProduct\r\n}\r\n"]},"metadata":{},"sourceType":"module"}