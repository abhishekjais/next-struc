{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\React\\\\next-struc\\\\pages\\\\index.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { connect } from 'react-redux';\nimport Layout from '../components/Layout';\nimport Search from './../components/Search';\nimport actions from '../store/actions';\n\nvar Index = function Index(props) {\n  console.log(props, 'props');\n  return __jsx(Layout, {\n    title: \"Home\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, __jsx(Search, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }));\n};\n\n_c = Index;\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!ctx.isServer) {\n              _context.next = 7;\n              break;\n            }\n\n            if (!(ctx.store.getState().product.data.length === 0)) {\n              _context.next = 5;\n              break;\n            }\n\n            _context.next = 4;\n            return ctx.store.dispatch(actions.getProduct());\n\n          case 4:\n            console.log(ctx.store.getState());\n\n          case 5:\n            _context.next = 8;\n            break;\n\n          case 7:\n            console.log('ctx', ctx.store.getState());\n\n          case 8:\n            return _context.abrupt(\"return\", {});\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default connect(function (state) {\n  return state;\n})(Index);\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["D:/React/next-struc/pages/index.tsx"],"names":["connect","Layout","Search","actions","Index","props","console","log","getInitialProps","ctx","isServer","store","getState","product","data","length","dispatch","getProduct","state"],"mappings":";;;;;;;;AACA,SAASA,OAAT,QAAwB,aAAxB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmB,OAAnB;AACA,SAEI,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ;AAMH,CARD;;KAAMD,K;;AAUNA,KAAK,CAACI,eAAN;AAAA,sEAAwB,iBAAgBC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,iBAChBA,GAAG,CAACC,QADY;AAAA;AAAA;AAAA;;AAAA,kBAEZD,GAAG,CAACE,KAAJ,CAAUC,QAAV,GAAqBC,OAArB,CAA6BC,IAA7B,CAAkCC,MAAlC,KAA6C,CAFjC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAGNN,GAAG,CAACE,KAAJ,CAAUK,QAAV,CAAmBb,OAAO,CAACc,UAAR,EAAnB,CAHM;;AAAA;AAIZX,YAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACE,KAAJ,CAAUC,QAAV,EAAZ;;AAJY;AAAA;AAAA;;AAAA;AAOhBN,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBE,GAAG,CAACE,KAAJ,CAAUC,QAAV,EAAnB;;AAPgB;AAAA,6CAUb,EAVa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAcA,eAAeZ,OAAO,CAAC,UAAAkB,KAAK;AAAA,SAAIA,KAAJ;AAAA,CAAN,CAAP,CAAwBd,KAAxB,CAAf","sourcesContent":["\nimport { connect } from 'react-redux';\nimport initialize from '../utils/initialize';\nimport Layout from '../components/Layout';\nimport Search from './../components/Search';\nimport actions from '../store/actions';\n\nconst Index = (props) => {\n    console.log(props, 'props');\n    return (\n\n        <Layout title=\"Home\">\n            <Search />\n        </Layout>\n    )\n};\n\nIndex.getInitialProps = async function (ctx: any) {\n    if (ctx.isServer) {\n        if (ctx.store.getState().product.data.length === 0) {\n            await ctx.store.dispatch(actions.getProduct());\n            console.log(ctx.store.getState());\n        }\n    } else {\n        console.log('ctx', ctx.store.getState());\n    }\n\n    return {};\n};\n\n\nexport default connect(state => state)(Index);"]},"metadata":{},"sourceType":"module"}