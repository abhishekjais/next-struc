{"ast":null,"code":"import Router from 'next/router';\nimport axios from 'axios';\nimport { PRO_LIST } from './ActionsTypes';\nimport { API } from '../../config';\nexport const getProduct = (route, query) => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(`${API}/${route}`, {\n        params: query\n      });\n      dispatch({\n        type: PRO_LIST,\n        payload: res\n      });\n    } catch (error) {\n      console.log(error, 'error.response');\n\n      switch (error.response.status) {\n        case 401:\n          Router.push('/');\n          break;\n\n        case 422:\n          alert(error.response.data.meta.message);\n          break;\n\n        case 500:\n          alert('Interval server error! Try again!');\n\n        case 503:\n          alert(error.response.data.meta.message);\n          Router.push('/');\n          break;\n\n        case 503:\n          alert(error.response.statusText);\n          Router.push('/');\n          break;\n\n        default:\n          alert(error.response.data.meta.message);\n          break;\n      }\n    }\n  };\n};\nexport default {\n  getProduct\n};","map":{"version":3,"sources":["D:/React/next-struc/store/actions/product.tsx"],"names":["Router","axios","PRO_LIST","API","getProduct","route","query","dispatch","res","get","params","type","payload","error","console","log","response","status","push","alert","data","meta","message","statusText"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AAIA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAgBC,KAAhB,KAA+B;AACrD,SAAO,MAAOC,QAAP,IAAyB;AAC5B,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAW,GAAEN,GAAI,IAAGE,KAAM,EAA1B,EAA6B;AAAEK,QAAAA,MAAM,EAAEJ;AAAV,OAA7B,CAAlB;AACAC,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAET,QAAR;AAAkBU,QAAAA,OAAO,EAAEJ;AAA3B,OAAD,CAAR;AACH,KAHD,CAGE,OAAOK,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmB,gBAAnB;;AACA,cAAQA,KAAK,CAACG,QAAN,CAAeC,MAAvB;AACI,aAAK,GAAL;AACIjB,UAAAA,MAAM,CAACkB,IAAP,CAAY,GAAZ;AACA;;AACJ,aAAK,GAAL;AACIC,UAAAA,KAAK,CAACN,KAAK,CAACG,QAAN,CAAeI,IAAf,CAAoBC,IAApB,CAAyBC,OAA1B,CAAL;AACA;;AACJ,aAAK,GAAL;AACIH,UAAAA,KAAK,CAAC,mCAAD,CAAL;;AACJ,aAAK,GAAL;AACIA,UAAAA,KAAK,CAACN,KAAK,CAACG,QAAN,CAAeI,IAAf,CAAoBC,IAApB,CAAyBC,OAA1B,CAAL;AACAtB,UAAAA,MAAM,CAACkB,IAAP,CAAY,GAAZ;AACA;;AACJ,aAAK,GAAL;AACIC,UAAAA,KAAK,CAACN,KAAK,CAACG,QAAN,CAAeO,UAAhB,CAAL;AACAvB,UAAAA,MAAM,CAACkB,IAAP,CAAY,GAAZ;AACA;;AACJ;AACIC,UAAAA,KAAK,CAACN,KAAK,CAACG,QAAN,CAAeI,IAAf,CAAoBC,IAApB,CAAyBC,OAA1B,CAAL;AACA;AAnBR;AAqBH;AACJ,GA5BD;AA6BH,CA9BM;AAgCP,eAAe;AACXlB,EAAAA;AADW,CAAf","sourcesContent":["import Router from 'next/router';\r\nimport axios from 'axios';\r\nimport { PRO_LIST } from './ActionsTypes';\r\nimport { API } from '../../config';\r\n\r\n\r\n\r\nexport const getProduct = (route: string, query: any) => {\r\n    return async (dispatch: any) => {\r\n        try {\r\n            const res = await axios.get(`${API}/${route}`, { params: query });\r\n            dispatch({ type: PRO_LIST, payload: res });\r\n        } catch (error) {\r\n            console.log(error, 'error.response');\r\n            switch (error.response.status) {\r\n                case 401:\r\n                    Router.push('/');\r\n                    break;\r\n                case 422:\r\n                    alert(error.response.data.meta.message);\r\n                    break;\r\n                case 500:\r\n                    alert('Interval server error! Try again!');\r\n                case 503:\r\n                    alert(error.response.data.meta.message);\r\n                    Router.push('/');\r\n                    break;\r\n                case 503:\r\n                    alert(error.response.statusText);\r\n                    Router.push('/');\r\n                    break;\r\n                default:\r\n                    alert(error.response.data.meta.message);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default {\r\n    getProduct\r\n}\r\n"]},"metadata":{},"sourceType":"module"}