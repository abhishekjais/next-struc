{"ast":null,"code":"var _jsxFileName = \"/var/local/next-struc/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { connect } from 'react-redux';\nimport initialize from '../utils/initialize';\nimport Layout from '../components/Layout';\n\nconst Index = () => __jsx(Layout, {\n  title: \"Home\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n}, __jsx(\"h2\", {\n  className: \"title is-2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }\n}, \"Authentication with Next.js using JWT and Redux\"), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }\n}, \"A demonstrating app of Next.js application using JWT with Redux.\"));\n\nIndex.getInitialProps = function (ctx) {\n  initialize(ctx);\n};\n\nexport default connect(state => state)(Index);","map":{"version":3,"sources":["/var/local/next-struc/pages/index.tsx"],"names":["connect","initialize","Layout","Index","getInitialProps","ctx","state"],"mappings":";;;AACA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,KAAK,GAAG,MACV,MAAC,MAAD;AAAQ,EAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAI,EAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAFJ,CADJ;;AASAA,KAAK,CAACC,eAAN,GAAwB,UAAUC,GAAV,EAAoB;AACxCJ,EAAAA,UAAU,CAACI,GAAD,CAAV;AACH,CAFD;;AAIA,eAAeL,OAAO,CAACM,KAAK,IAAIA,KAAV,CAAP,CAAwBH,KAAxB,CAAf","sourcesContent":["\nimport { connect } from 'react-redux';\nimport initialize from '../utils/initialize';\nimport Layout from '../components/Layout';\n\nconst Index = () => (\n    <Layout title=\"Home\">\n        <h2 className=\"title is-2\">Authentication with Next.js using JWT and Redux</h2>\n        <p>\n            A demonstrating app of Next.js application using JWT with Redux.\n    </p>\n    </Layout>\n);\n\nIndex.getInitialProps = function (ctx: any) {\n    initialize(ctx);\n};\n\nexport default connect(state => state)(Index);"]},"metadata":{},"sourceType":"module"}