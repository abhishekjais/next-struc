{"ast":null,"code":"import Router from 'next/router';\nimport axios from 'axios';\nimport { PRO_LIST } from './ActionsTypes';\nexport const getProduct = () => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(`https://fakestoreapi.com/products`);\n      dispatch({\n        type: PRO_LIST,\n        payload: res.data\n      });\n    } catch (error) {\n      console.log(error, 'error.response');\n\n      switch (error.response.status) {\n        case 401:\n          Router.push('/');\n          break;\n\n        case 422:\n          alert(error.response.data.meta.message);\n          break;\n\n        case 500:\n          alert('Interval server error! Try again!');\n\n        case 503:\n          alert(error.response.data.meta.message);\n          Router.push('/');\n          break;\n\n        default:\n          alert(error.response.data.meta.message);\n          break;\n      }\n    }\n  };\n};\nexport default {\n  getProduct\n};","map":{"version":3,"sources":["D:/React/next-struc/store/actions/product.tsx"],"names":["Router","axios","PRO_LIST","getProduct","dispatch","res","get","type","payload","data","error","console","log","response","status","push","alert","meta","message"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAIA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC5B,SAAO,MAAOC,QAAP,IAAyB;AAC5B,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,mCAAX,CAAlB;AACAF,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEL,QAAR;AAAkBM,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAA/B,OAAD,CAAR;AACH,KAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmB,gBAAnB;;AACA,cAAQA,KAAK,CAACG,QAAN,CAAeC,MAAvB;AACI,aAAK,GAAL;AACId,UAAAA,MAAM,CAACe,IAAP,CAAY,GAAZ;AACA;;AACJ,aAAK,GAAL;AACIC,UAAAA,KAAK,CAACN,KAAK,CAACG,QAAN,CAAeJ,IAAf,CAAoBQ,IAApB,CAAyBC,OAA1B,CAAL;AACA;;AACJ,aAAK,GAAL;AACIF,UAAAA,KAAK,CAAC,mCAAD,CAAL;;AACJ,aAAK,GAAL;AACIA,UAAAA,KAAK,CAACN,KAAK,CAACG,QAAN,CAAeJ,IAAf,CAAoBQ,IAApB,CAAyBC,OAA1B,CAAL;AACAlB,UAAAA,MAAM,CAACe,IAAP,CAAY,GAAZ;AACA;;AACJ;AACIC,UAAAA,KAAK,CAACN,KAAK,CAACG,QAAN,CAAeJ,IAAf,CAAoBQ,IAApB,CAAyBC,OAA1B,CAAL;AACA;AAfR;AAiBH;AACJ,GAxBD;AA0BH,CA3BM;AA6BP,eAAe;AACXf,EAAAA;AADW,CAAf","sourcesContent":["import Router from 'next/router';\r\nimport axios from 'axios';\r\nimport { PRO_LIST } from './ActionsTypes';\r\n\r\n\r\n\r\nexport const getProduct = () => {\r\n    return async (dispatch: any) => {\r\n        try {\r\n            const res = await axios.get(`https://fakestoreapi.com/products`);\r\n            dispatch({ type: PRO_LIST, payload: res.data });\r\n        } catch (error) {\r\n            console.log(error, 'error.response');\r\n            switch (error.response.status) {\r\n                case 401:\r\n                    Router.push('/');\r\n                    break;\r\n                case 422:\r\n                    alert(error.response.data.meta.message);\r\n                    break;\r\n                case 500:\r\n                    alert('Interval server error! Try again!');\r\n                case 503:\r\n                    alert(error.response.data.meta.message);\r\n                    Router.push('/');\r\n                    break;\r\n                default:\r\n                    alert(error.response.data.meta.message);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default {\r\n    getProduct\r\n}\r\n"]},"metadata":{},"sourceType":"module"}