{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PRO_LIST } from '../actions/ActionsTypes';\nexport const initialState = {\n  data: []\n};\n\nconst product = (state = initialState, action) => {\n  console.log(action, 'action');\n\n  switch (action.type) {\n    case PRO_LIST:\n      let data = action.payload;\n      return _objectSpread(_objectSpread({}, state), data);\n\n    default:\n      return state;\n  }\n};\n\nexport default product;","map":{"version":3,"sources":["D:/React/next-struc/store/reducer/product.tsx"],"names":["PRO_LIST","initialState","data","product","state","action","console","log","type","payload"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,yBAAzB;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,IAAI,EAAE;AADkB,CAArB;;AAIP,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAuC;AACnDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoB,QAApB;;AACA,UAAQA,MAAM,CAACG,IAAf;AACI,SAAKR,QAAL;AACI,UAAIE,IAAI,GAAGG,MAAM,CAACI,OAAlB;AACA,6CAAYL,KAAZ,GAAsBF,IAAtB;;AACJ;AACI,aAAOE,KAAP;AALR;AAOH,CATD;;AAUA,eAAeD,OAAf","sourcesContent":["import { PRO_LIST } from '../actions/ActionsTypes';\r\n\r\nexport const initialState = {\r\n    data: []\r\n};\r\n\r\nconst product = (state = initialState, action: any) => {\r\n    console.log(action, 'action');\r\n    switch (action.type) {\r\n        case PRO_LIST:\r\n            let data = action.payload;\r\n            return { ...state, ...data }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default product;"]},"metadata":{},"sourceType":"module"}